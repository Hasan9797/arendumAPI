generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  fullName  String @map("full_name")
  phone     String @unique
  role      Int    @default(1)
  login     String @unique
  password  String
  status    Int    @default(1)
  createdAt Int    @default(0) @map("created_at")
  updatedAt Int    @default(0) @map("updated_at")
}

model Driver {
  id                      Int       @id @default(autoincrement())
  fullName                String?   @map("full_name")
  phone                   String    @unique
  machineId               Int?      @map("machine_id")
  email                   String?   @unique
  status                  Int       @default(0)
  photoTexPassport        Json      @default("[]") @map("photo_tex_passport")
  photoPassport           Json      @default("[]") @map("photo_passport")
  photoLicense            Json      @default("[]") @map("photo_license")
  photoConfidencePassport Json      @default("[]") @map("photo_confidence_passport")
  photoDriverLicense      Json      @default("[]") @map("photo_driver_license")
  photoCar                Json      @default("[]") @map("photo_car")
  params                  Json      @default("{}") @map("params")
  long                    Decimal?  @default(0)
  lat                     Decimal?  @default(0)
  machineColor            String?
  machineNumber           String?
  legal                   Boolean   @default(false)
  merchantId              Int?      @map("merchant_id")
  machine                 Machines? @relation("MachineDrivers", fields: [machineId], references: [id])

  regionId Int?    @map("region_id")
  region   Region? @relation("DriverRegion", fields: [regionId], references: [id])

  structureId Int?       @map("structure_id")
  structure   Structure? @relation("DriverStructure", fields: [structureId], references: [id])

  fcmToken  String? @map("fcm_token")
  createdAt Int     @default(0) @map("created_at")
  updatedAt Int     @default(0) @map("updated_at")
  Order     Order[] @relation("DriverOrder")
}

model Client {
  id          Int        @id @default(autoincrement())
  fullName    String?    @map("full_name")
  phone       String     @unique
  legal       Boolean    @default(false)
  email       String?    @unique
  status      Int        @default(0)
  long        Decimal?   @default(0)
  lat         Decimal?   @default(0)
  fcmToken    String?    @map("fcm_token")
  regionId    Int?       @map("region_id")
  region      Region?    @relation("ClientRegion", fields: [regionId], references: [id])
  structureId Int?       @map("structure_id")
  structure   Structure? @relation("ClientStructures", fields: [structureId], references: [id])
  createdAt   Int        @default(0) @map("created_at")
  updatedAt   Int        @default(0) @map("updated_at")
  Order       Order[]    @relation("ClientOrder")
}

model Machines {
  id                   Int                    @id @default(autoincrement())
  name                 String?                @map("name")
  nameUz               String                 @map("name_uz")
  nameRu               String                 @map("name_ru")
  nameEn               String?                @map("name_en")
  img                  String?
  status               Int                    @default(0)
  machineParams        MachineParams[]        @relation("MachineParams")
  machineParamsFilters MachineParamsFilters[] @relation("MachineParamsFilters")
  createdAt            Int                    @default(0) @map("created_at")
  updatedAt            Int                    @default(0) @map("updated_at")
  drivers              Driver[]               @relation("MachineDrivers")
  Order                Order[]
  MachinePrice         MachinePrice[]
}

model MachineParams {
  id        Int      @id @default(autoincrement())
  name      String?  @map("name")
  nameUz    String   @map("name_uz")
  nameRu    String   @map("name_ru")
  nameEn    String?  @map("name_en")
  machineId Int      @map("machine_id")
  status    Int      @default(0)
  machines  Machines @relation("MachineParams", fields: [machineId], references: [id])
  params    Json     @default("[]")
  createdAt Int      @default(0) @map("created_at")
  updatedAt Int      @default(0) @map("updated_at")
}

model MachineParamsFilters {
  id           Int      @id @default(autoincrement())
  machineId    Int      @map("machine_id")
  machines     Machines @relation("MachineParamsFilters", fields: [machineId], references: [id])
  filterParams Json     @default("[]") @map("filter_params")
  status       Int      @default(0)
  createdAt    Int      @default(0) @map("created_at")
  updatedAt    Int      @default(0) @map("updated_at")
}

model BankCard {
  id        Int    @id @default(autoincrement())
  name      String
  expire    String
  userId    Int    @map("user_id")
  status    Int    @default(0)
  createdAt Int    @default(0) @map("created_at")
  updatedAt Int    @default(0) @map("updated_at")
}

model UserToken {
  id        Int    @id @default(autoincrement())
  token     String
  expire    String
  userId    Int    @map("user_id")
  status    Int    @default(0)
  createdAt Int    @default(0) @map("created_at")
  updatedAt Int    @default(0) @map("updated_at")
}

model Merchant {
  id        Int     @id @default(autoincrement())
  fullName  String  @map("full_name")
  phone     String  @unique
  inn       String?
  status    Int     @default(0)
  createdAt Int     @default(0) @map("created_at")
  updatedAt Int     @default(0) @map("updated_at")
}

model Region {
  id         Int         @id @default(autoincrement())
  name       String?     @map("name")
  nameUz     String      @map("name_uz")
  nameRu     String      @map("name_ru")
  nameEn     String?     @map("name_en")
  status     Int         @default(1)
  structures Structure[] @relation("RegionStructures")
  createdAt  Int         @default(0) @map("created_at")
  updatedAt  Int         @default(0) @map("updated_at")
  Driver     Driver[]    @relation("DriverRegion")
  Client     Client[]    @relation("ClientRegion")
}

model Structure {
  id        Int      @id @default(autoincrement())
  name      String?  @map("name")
  nameUz    String   @map("name_uz")
  nameRu    String   @map("name_ru")
  nameEn    String?  @map("name_en")
  status    Int      @default(1)
  regionId  Int      @map("region_id")
  region    Region?  @relation("RegionStructures", fields: [regionId], references: [id])
  createdAt Int      @default(0) @map("created_at")
  updatedAt Int      @default(0) @map("updated_at")
  Client    Client[] @relation("ClientStructures")
  Driver    Driver[] @relation("DriverStructure")
}

model Order {
  id          Int       @id @default(autoincrement())
  clientId    Int       @map("client_id")
  client      Client    @relation("ClientOrder", fields: [clientId], references: [id])
  driverId    Int       @map("driver_id")
  driver      Driver    @relation("DriverOrder", fields: [driverId], references: [id])
  machineId   Int?      @map("machine_id")
  machine     Machines? @relation(fields: [machineId], references: [id])
  amount      Int
  status      Int       @default(1)
  caunt       Int       @default(1)
  long        String?
  lat         String?
  structureId Int       @default(0) @map("structure_id")
  createdAt   Int       @default(0) @map("created_at")
  updatedAt   Int       @default(0) @map("updated_at")
  orderParams Json      @default("[]") @map("order_params")
}

model MachinePrice {
  id                 Int                  @id @default(autoincrement())
  machineId          Int                  @map("machine_id")
  machines           Machines             @relation(fields: [machineId], references: [id])
  minAmount          String               @map("min_amount")
  minHourTime        String               @map("min_hour_time")
  tariffName         String?              @map("tariff_name")
  status             Int                  @default(0)
  createdAt          Int                  @default(0) @map("created_at")
  updatedAt          Int                  @default(0) @map("updated_at")
  machinePriceParams MachinePriceParams[] @relation("MachinePriceParams")
}

model MachinePriceParams {
  id             Int          @id @default(autoincrement())
  parameter      String       @map("parameter")
  parameterName  String       @map("parameter_name")
  unit           String       @map("unit")
  type           String       @map("type")
  machinePriceId Int          @map("machine_price_id")
  status         Int          @default(0)
  machinePrice   MachinePrice @relation("MachinePriceParams", fields: [machinePriceId], references: [id], onDelete: Cascade)
  createdAt      Int          @default(0) @map("created_at")
  updatedAt      Int          @default(0) @map("updated_at")
}
